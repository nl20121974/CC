// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace CC.Data;

public partial class DataContext : DbContext
{
    public DataContext(DbContextOptions<DataContext> options)
        : base(options)
    {
    }

    public virtual DbSet<UserAlbum> UserAlbums { get; set; }

    public virtual DbSet<UserGroup> UserGroups { get; set; }

    public virtual DbSet<UserGroupMessage> UserGroupMessages { get; set; }

    public virtual DbSet<UserGroupProfile> UserGroupProfiles { get; set; }

    public virtual DbSet<UserMedium> UserMedia { get; set; }

    public virtual DbSet<UserMediumProfile> UserMediumProfiles { get; set; }

    public virtual DbSet<UserProfile> UserProfiles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<UserAlbum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Album");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();

            entity.HasOne(d => d.IdNavigation).WithOne(p => p.UserAlbum)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserAlbum_UserMedium");
        });

        modelBuilder.Entity<UserGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Group");

            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<UserGroupMessage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_GroupMessage");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.UserGroup).WithMany(p => p.UserGroupMessages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserGroupMessage_UserGroup");

            entity.HasOne(d => d.UserGroupProfile).WithMany(p => p.UserGroupMessages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserGroupMessage_UserGroupProfile");
        });

        modelBuilder.Entity<UserGroupProfile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_GroupUser");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.UserGroup).WithMany(p => p.UserGroupProfiles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserGroupProfile_UserGroup");

            entity.HasOne(d => d.UserProfile).WithMany(p => p.UserGroupProfiles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserGroupProfile_UserProfile");
        });

        modelBuilder.Entity<UserMedium>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Media");
        });

        modelBuilder.Entity<UserMediumProfile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_UserMediumUserProfile");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.UserMedium).WithMany(p => p.UserMediumProfiles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserMediumProfile_UserMedium");

            entity.HasOne(d => d.UserProfile).WithMany(p => p.UserMediumProfiles)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserMediumProfile_UserProfile");
        });

        modelBuilder.Entity<UserProfile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Member");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}